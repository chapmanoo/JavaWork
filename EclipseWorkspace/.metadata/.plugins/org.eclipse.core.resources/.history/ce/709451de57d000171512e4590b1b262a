import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;

public class Methods {

	private HashMap<String, Character> morseAlphabet = new HashMap<String, Character>();
	
	public Methods(){
	morseAlphabet.put(".-", 'A');
	morseAlphabet.put("-...", 'B');
	morseAlphabet.put("-.-.", 'C');
	morseAlphabet.put("-..", 'D');
	morseAlphabet.put(".", 'E');
	morseAlphabet.put("..-.", 'F');
	morseAlphabet.put("--.", 'G');
	morseAlphabet.put("....", 'H');
	morseAlphabet.put("..", 'I');
	morseAlphabet.put(".---", 'J');
	morseAlphabet.put("-.-", 'K');
	morseAlphabet.put(".-..", 'L');
	morseAlphabet.put("--", 'M');
	morseAlphabet.put("-.", 'N');
	morseAlphabet.put("---", 'O');
	morseAlphabet.put(".--.", 'P');
	morseAlphabet.put("--.-", 'Q');
	morseAlphabet.put(".-.", 'R');
	morseAlphabet.put("...", 'S');
	morseAlphabet.put("-", 'T');
	morseAlphabet.put("..-", 'U');
	morseAlphabet.put("...-", 'V');
	morseAlphabet.put(".--", 'W');
	morseAlphabet.put("-..-", 'X');
	morseAlphabet.put("-.--", 'Y');
	morseAlphabet.put("--..", 'Z');
	
	
	}
	
	public String translateFromMorse(String morseString) {
		// TODO Auto-generated method stub
		String toReturn = "";
		
		String[] arrayMorseString;
		
		arrayMorseString = morseString.split(" / ");
		
		for(String word : arrayMorseString)
		{
			String[] wordIsBuiltOf = word.split(" ");
			for(String character : wordIsBuiltOf)
			{
				//getTranslation(character);
				toReturn = toReturn + getTranslation(character);
			}
			toReturn += " ";
		}
		//System.out.println(toReturn);
		return toReturn;
	}

	public char getTranslation(String string) {
		char toReturn = ' ';
		toReturn = morseAlphabet.get(string);
		//System.out.println(toReturn);
		return toReturn;
	}

	public String translateToMorse(String phraseToTranslate) {
		// TODO Auto-generated method stub
		String toReturn = "";
		phraseToTranslate = phraseToTranslate.toUpperCase();
		
		String[]arrayWordString = phraseToTranslate.split(" ");
		
		for(String word : arrayWordString)
		{
			char[] charactersInWord = word.toCharArray();
			for(char i : charactersInWord)
			{
				toReturn += translateCharToMorse(i);
			}
		}
		
		return toReturn;
	}

	private String translateCharToMorse(char i) {
		// TODO Auto-generated method stub
		String toReturn = "";
	
		toReturn += morseAlphabet.values();
		System.out.println(toReturn);
		return toReturn;
	}
	
	/*	for(Map.Entry<String,Integer> entry : wordMap.entrySet())
		{
			if(entry.getValue() > best)
			{
				toReturn = entry.getKey().toString();
			}
		}*/

}
