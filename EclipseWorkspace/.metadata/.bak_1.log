!SESSION 2017-11-16 09:05:13.536 -----------------------------------------------
eclipse.buildId=4.7.0.I20170612-0950
java.version=1.8.0_144
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_GB
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

This is a continuation of log file C:\Users\OwenC\MyApps\EclipseWorkspace\.metadata\.bak_0.log
Created Time: 2017-11-16 16:26:53.825

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:26:53.830
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.recommenders.rcp.utils.JdtUtils.findAstNodeFromEditorSelection(JdtUtils.java:669)
	at org.eclipse.recommenders.internal.rcp.JavaElementSelectionService.handleSelectionInEditor(JavaElementSelectionService.java:110)
	at org.eclipse.recommenders.internal.rcp.JavaElementSelectionService.access$1(JavaElementSelectionService.java:105)
	at org.eclipse.recommenders.internal.rcp.JavaElementSelectionService$1.run(JavaElementSelectionService.java:82)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:26:53.836
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.recommenders.rcp.utils.JdtUtils.findAstNodeFromEditorSelection(JdtUtils.java:669)
	at org.eclipse.recommenders.internal.rcp.JavaElementSelectionService.handleSelectionInEditor(JavaElementSelectionService.java:110)
	at org.eclipse.recommenders.internal.rcp.JavaElementSelectionService.access$1(JavaElementSelectionService.java:105)
	at org.eclipse.recommenders.internal.rcp.JavaElementSelectionService$1.run(JavaElementSelectionService.java:82)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:26:56.287
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1254)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:26:56.302
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1254)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:26:56.321
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1254)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:26:56.336
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:26:56.341
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:26:56.349
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:26:56.360
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:26:56.365
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:26:56.373
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:26:56.385
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:26:56.389
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:26:56.398
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:26:56.410
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:26:56.414
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:26:56.424
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:26:56.437
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:26:56.442
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:26:56.452
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:26:56.466
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:26:56.470
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:26:56.482
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:26:56.496
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:26:56.500
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:26:56.512
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:26:56.528
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:26:56.532
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:26:56.545
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:26:56.561
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:26:56.566
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:26:56.578
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:26:56.596
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:26:56.600
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:26:56.614
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:26:56.631
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:26:56.635
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:26:56.650
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:26:56.667
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:26:56.671
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:26:56.687
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:26:56.705
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:26:56.710
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:26:56.727
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:05.000
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:137)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:116)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:164)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:86)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:05.011
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:137)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:116)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:164)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:86)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:05.048
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:137)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:116)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:164)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:86)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:06.300
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:125)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:98)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:76)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:301)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:188)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1192)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1161)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:894)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:247)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:237)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1044)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:06.331
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:125)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:98)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:76)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:301)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:188)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1192)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1161)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:894)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:247)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:237)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1044)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:06.349
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:125)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:98)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:76)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:301)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:188)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1192)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1161)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:894)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:247)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:237)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1044)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:06.370
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1011)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:98)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:76)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:301)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:188)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1192)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1161)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:894)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:247)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:237)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1044)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.ui 4 0 2017-11-16 16:27:06.390
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1011)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:98)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:76)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:301)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:188)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1192)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1161)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:894)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:247)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:237)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1044)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:07.966
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:137)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:116)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:164)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:86)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:07.978
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:137)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:116)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:164)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:86)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:08.014
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:137)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:116)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:164)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:86)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:09.675
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:09.685
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:09.695
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:10.744
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:137)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:116)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:164)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:86)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:10.756
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:137)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:116)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:164)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:86)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:10.793
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:137)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:116)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:164)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:86)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:10.819
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1014)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:808)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:752)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:675)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:667)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:164)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:86)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:10.824
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1014)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:808)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:752)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:675)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:667)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:164)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:86)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:10.845
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1014)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:808)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:752)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:675)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:667)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:164)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:86)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:12.357
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1085)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1254)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:12.371
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1085)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1254)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:12.406
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1085)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1254)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:12.434
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:12.438
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:12.462
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:14.444
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1254)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:14.461
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1254)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:14.509
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1254)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:14.538
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:14.542
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:14.567
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:14.595
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:14.600
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:14.625
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:14.654
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:14.658
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:14.684
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:14.713
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:14.717
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:14.744
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:14.774
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:14.778
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:14.806
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:14.837
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:14.842
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:14.870
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:14.902
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:14.906
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:14.935
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:14.967
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:14.971
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:15.001
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:15.034
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:15.038
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:15.068
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:15.102
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:15.106
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:15.138
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:15.173
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:15.177
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:15.209
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:15.244
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:15.248
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:15.281
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:15.317
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:137)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:116)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:164)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:86)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:15.322
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:137)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:116)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:164)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:86)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:15.356
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:137)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:116)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:164)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:86)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:15.393
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:15.397
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:15.432
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:19.049
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n(Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1085)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1254)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:19.068
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1085)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1254)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:19.126
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1085)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1254)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:19.166
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n(Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:19.171
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:19.206
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:20.676
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1085)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1254)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:20.694
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1085)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1254)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:20.754
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1085)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1254)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:20.797
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:20.802
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:20.839
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:21.407
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:137)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:116)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:164)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:86)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:21.420
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:137)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:116)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:164)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:86)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:21.474
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:137)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:116)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:164)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:86)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:21.516
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1014)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:808)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:752)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:675)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:667)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:164)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:86)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:21.520
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1014)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:808)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:752)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:675)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:667)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:164)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:86)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:21.559
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1014)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:808)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:752)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:675)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:667)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:164)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:86)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:23.806
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1254)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:23.825
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1254)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:23.887
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1254)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:23.932
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:23.936
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:23.977
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:24.021
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:24.025
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:24.067
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:24.111
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:24.116
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:24.158
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:24.208
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:24.213
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:24.255
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:24.301
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:24.306
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:24.349
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:24.396
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:24.401
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:24.445
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:24.494
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:24.499
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:24.544
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:24.592
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:24.596
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:24.642
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:24.691
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:24.696
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:24.742
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:24.791
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:24.796
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:24.844
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:24.895
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:125)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:98)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:76)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:301)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:188)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1192)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1161)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:894)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:247)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:237)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1044)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:24.944
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:125)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:98)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:76)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:301)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:188)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1192)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1161)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:894)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:247)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:237)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1044)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:24.992
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:125)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:98)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:76)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:301)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:188)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1192)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1161)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:894)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:247)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:237)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1044)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:25.045
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:25.049
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1011)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:98)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:76)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:301)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:188)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1192)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1161)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:894)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:247)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:237)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1044)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:25.099
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.ui 4 0 2017-11-16 16:27:25.149
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1011)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:98)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:76)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:301)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:188)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1192)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1161)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:894)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:247)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:237)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1044)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:25.200
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:25.261
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:25.266
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:25.316
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:25.370
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:25.375
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:25.426
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:157)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:132)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:260)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:259)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:104)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:377)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:359)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:311)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:26.570
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:125)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:98)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:76)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:301)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:188)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1192)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1161)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:894)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:247)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:237)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1044)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:26.649
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:125)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:98)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:76)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:301)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:188)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1192)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1161)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:894)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:247)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:237)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1044)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:26.702
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:125)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:98)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:76)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:301)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:188)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1192)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1161)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:894)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:247)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:237)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1044)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:26.758
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1011)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:98)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:76)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:301)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:188)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1192)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1161)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:894)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:247)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:237)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1044)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.ui 4 0 2017-11-16 16:27:26.811
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1011)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:98)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:76)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:301)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:188)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1192)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1161)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:894)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:247)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:237)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1044)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:27.408
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:27.423
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:27.433
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:27.758
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:125)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:98)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:76)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:301)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:188)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1192)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1161)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:894)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:247)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:237)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1044)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:27.826
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:125)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:98)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:76)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:301)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:188)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1192)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1161)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:894)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:247)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:237)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1044)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:27.881
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:125)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:98)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:76)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:301)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:188)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1192)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1161)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:894)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:247)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:237)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1044)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:27.938
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1011)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:98)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:76)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:301)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:188)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1192)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1161)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:894)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:247)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:237)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1044)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.ui 4 0 2017-11-16 16:27:27.995
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1011)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:98)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:76)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:301)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:188)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1192)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1161)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:894)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:247)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:237)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1044)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:31.988
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:32.004
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:32.016
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:34.744
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2)))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:34.760
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:34.774
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:37.447
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1085)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1254)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:37.468
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1085)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1254)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:37.552
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1085)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1254)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:37.616
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2))))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:37.620
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:37.679
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:39.625
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1085)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1254)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:39.639
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1085)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1254)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:39.713
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1085)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1254)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:39.854
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:39.870
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:39.955
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:44.313
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1085)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1254)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:44.327
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1085)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1254)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:44.401
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:579)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1085)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1254)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:44.469
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 2 2017-11-16 16:27:44.473
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.ui 4 0 2017-11-16 16:27:44.536
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:296)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:538)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:481)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:471)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:173)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:158)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)

!ENTRY org.eclipse.jdt.core 4 4 2017-11-16 16:27:47.979
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

import java.util.*;

public class HelloWorld {

	public static void main(String[] args) {

		Methods m = new Methods();

		int[] intArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int[] populateArray = new int[10];

		System.out.println(m.newHelloWorld());
		System.out.println("");

		// AcceptString("Print out this string");

		System.out.println("ConditionIsFalse");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 9, false));
		System.out.println("");

		System.out.println("ConditionIsTrue");
		System.out.println(m.mathFuncBoolTRUEToAdd(4, 2, true));
		System.out.println("");

		System.out.println("OneNumberIs0");
		System.out.println(m.mathFuncBoolTRUEToAdd(5, 0, false));
		System.out.println(m.mathFuncBoolTRUEToAdd(0, 9, false));
		System.out.println("");

		System.out.println("ForLoop");
		m.forLoop(intArray);
		System.out.println("");

		System.out.println("ValuesInArray");
		m.valuesInArray(intArray);
		System.out.println("");

		System.out.println("PopulateArray");
		m.populateArrayAndMultiply(populateArray);
		System.out.println("");

		System.out.println("BlackJack");
		System.out.println(m.blackJack(1, 20));
		System.out.println(m.blackJack(2, 19));
		System.out.println(m.blackJack(22, 20));
		System.out.println(m.blackJack(19, 1));
		System.out.println("");

		System.out.println("Unique Sum");
		System.out.println(m.uniqueSum(1, 2, 3)); // 6
		System.out.println(m.uniqueSum(1, 1, 3)); // 4
		System.out.println(m.uniqueSum(1, 2, 1)); // 3
		System.out.println(m.uniqueSum(1, 2, 2)); // 3
		System.out.println(m.uniqueSum(1, 1, 1)); // 1
		System.out.println("");

		System.out.println("Too Hot?");
		System.out.println(m.tooHot(50, true));
		System.out.println(m.tooHot(95, true));
		System.out.println(m.tooHot(95, false));
		System.out.println(m.tooHot(65, true));
		System.out.println(m.tooHot(60, false));
		System.out.println(m.findPrimesBelowX(300));

		Person person1 = new Person("Jim Dave", 21, "Fishmonger");
		Person person2 = new Person("Owen Samuel", 26, "Professional Nail Filer");
		Person person3 = new Person("Lucy Mel", 37, "Official Football Pitch Grass Height Measurer");
		Person person4 = new Person("Racheal Gambon", 23, "Unofficial Conkers Referee");

		m.addPerson(person1);
		m.addPerson(person2);
		m.addPerson(person3);
		m.addPerson(person4);

		m.printArray();

		m.searchArray("Lucy Mel");
		
		//System.out.println(m.findPrimesBelowX(300));

	}
}

/*
 * public static void AcceptString (String toPass) { System.out.println(toPass);
 * }
 */
class Methods {
	

	private ArrayList<Person> personArrayList = new ArrayList<Person>();

	public long findPrimesBelowX (long n)
	{
		return n = (Math.log(n) + (Math.log( Math.log( n - 1))) + (Math.log( Math.log(n) - 2))/ Math.log(n - ((Math.log(Math.log((n))(Math.log(Math.log((n)) - (6*(Math.log( Math.log (n) + 11)/((2*( Math.log(n^2))))));
	}
	
	public void addPerson(Person p) {
		personArrayList.add(p);
	}
	
	public Person getPerson(int index) {
		return personArrayList.get(index);
	}

	public void printArray() {
		for (Person i : personArrayList) {
			System.out.println(i.toString());
		}
	}

	public Person searchArray(String name) {
		Person toReturn = null;
		for (Person i : personArrayList) {
			if (i.getName().equals(name)) {
				//System.out.println("You have found " + name);
			//	System.out.println(i.toString());
				toReturn = i;
				//break;
			}
		}
		return toReturn;
	}

	public String newHelloWorld() {
		String outstring = "Hello World!";

		return outstring;
	}

	public void forLoop(int[] intArray) {
		for (int i = 0; i < 10; i++) {
			System.out.println(mathFuncBoolTRUEToAdd(intArray[i], i, false));
		}
	}

	public void valuesInArray(int[] intArray) {
		for (int i = 0; i < intArray.length; i++) {
			System.out.println(intArray[i]);
		}
	}

	public void populateArrayAndMultiply(int[] populateArray) {
		for (int i = 1; i < 10; i++) {
			populateArray[i] = i;
			System.out.println(populateArray[i]);
		}
		System.out.println("MultiplyBy10");
		for (int i : populateArray) {
			populateArray[i] *= 10;
			System.out.println(populateArray[i]);
		}
	}

	public int mathFuncBoolTRUEToAdd(int num1, int num2, boolean toAdd) {
		int num3;

		/*
		 * if (num1 == 0) { return num2; }
		 * 
		 * if (num2 == 0) { return num1; }
		 */

		if (toAdd || (num1 == 0 || num2 == 0)) {
			num3 = num1 + num2;
		} else {
			num3 = num1 * num2;
		}
		return num3;
	}

	public int blackJack(int num1, int num2) {
		int returnInt = 0;
		int num1difference = 0;
		int num2difference = 0;
		int twenty1 = 21;

		num1difference = twenty1 - num1;
		num2difference = twenty1 - num2;

		if (num1difference < num2difference && num1 <= 21) {
			returnInt = num1;
		}
		if (num2 <= 21) {
			returnInt = num2;
		}
		return returnInt;
	}

	public int uniqueSum(int num1, int num2, int num3) {
		int returnValue = 0;

		if (num1 == num2) {
			num1 = 0;
		}
		if (num1 == num3) {
			num1 = 0;
		}
		if (num2 == num3) {
			num2 = 0;
		}

		returnValue = num1 + num2 + num3;

		return returnValue;
		
	}

	public boolean tooHot(int temp, boolean isSummer) {
		int upperLimit = 90;
		int lowerLimit = 60;

		if (isSummer) {
			upperLimit = 100;
		}

		if (temp >= lowerLimit && temp <= upperLimit) {
			return true;
		}

		return false;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1781)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1684)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1091)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1715)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2758)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:639)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:207)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:724)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:790)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1254)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:128)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:110)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:90)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:154)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:89)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:73)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)
